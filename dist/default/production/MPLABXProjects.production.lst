

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Aug 26 14:12:51 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00146C                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _port_reg
    67   00146C  80                 	db	128
    68   00146D  0F                 	db	15
    69   00146E  81                 	db	129
    70   00146F  0F                 	db	15
    71   001470  82                 	db	130
    72   001471  0F                 	db	15
    73   001472  83                 	db	131
    74   001473  0F                 	db	15
    75   001474  84                 	db	132
    76   001475  0F                 	db	15
    77                           
    78                           ;initializer for _lat_reg
    79   001476  89                 	db	137
    80   001477  0F                 	db	15
    81   001478  8A                 	db	138
    82   001479  0F                 	db	15
    83   00147A  8B                 	db	139
    84   00147B  0F                 	db	15
    85   00147C  8C                 	db	140
    86   00147D  0F                 	db	15
    87   00147E  8D                 	db	141
    88   00147F  0F                 	db	15
    89                           
    90                           ;initializer for _tris_reg
    91   001480  92                 	db	146
    92   001481  0F                 	db	15
    93   001482  93                 	db	147
    94   001483  0F                 	db	15
    95   001484  94                 	db	148
    96   001485  0F                 	db	15
    97   001486  95                 	db	149
    98   001487  0F                 	db	15
    99   001488  96                 	db	150
   100   001489  0F                 	db	15
   101                           
   102                           ;initializer for _motor2
   103   00148A  12                 	db	18
   104   00148B  1A                 	db	26
   105                           
   106                           ;initializer for _motor1
   107   00148C  02                 	db	2
   108   00148D  0A                 	db	10
   109                           
   110                           	psect	nvCOMRAM
   111   000039                     __pnvCOMRAM:
   112                           	callstack 0
   113   000039                     _ret:
   114                           	callstack 0
   115   000039                     	ds	1
   116   000000                     _PORTE	set	3972
   117   000000                     _PORTD	set	3971
   118   000000                     _PORTC	set	3970
   119   000000                     _PORTB	set	3969
   120   000000                     _PORTA	set	3968
   121   000000                     _LATA	set	3977
   122   000000                     _TRISA	set	3986
   123   000000                     _TRISE	set	3990
   124   000000                     _TRISD	set	3989
   125   000000                     _TRISC	set	3988
   126   000000                     _TRISB	set	3987
   127   000000                     _LATE	set	3981
   128   000000                     _LATD	set	3980
   129   000000                     _LATC	set	3979
   130   000000                     _LATB	set	3978
   131                           
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   00137E                     __pcinit:
   136                           	callstack 0
   137   00137E                     start_initialization:
   138                           	callstack 0
   139   00137E                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (34 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144   00137E  0E6C               	movlw	low __pidataCOMRAM
   145   001380  6EF6               	movwf	tblptrl,c
   146   001382  0E14               	movlw	high __pidataCOMRAM
   147   001384  6EF7               	movwf	tblptrh,c
   148   001386  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149   001388  6EF8               	movwf	tblptru,c
   150   00138A  EE00  F001         	lfsr	0,__pdataCOMRAM
   151   00138E  EE10 F022          	lfsr	1,34
   152   001392                     copy_data0:
   153   001392  0009               	tblrd		*+
   154   001394  CFF5 FFEE          	movff	tablat,postinc0
   155   001398  50E5               	movf	postdec1,w,c
   156   00139A  50E1               	movf	fsr1l,w,c
   157   00139C  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to COMRAM (8 bytes)
   160   00139E  EE00  F031         	lfsr	0,__pbssCOMRAM
   161   0013A2  0E08               	movlw	8
   162   0013A4                     clear_0:
   163   0013A4  6AEE               	clrf	postinc0,c
   164   0013A6  06E8               	decf	wreg,f,c
   165   0013A8  E1FD               	bnz	clear_0
   166   0013AA                     end_of_initialization:
   167                           	callstack 0
   168   0013AA                     __end_of__initialization:
   169                           	callstack 0
   170   0013AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171   0013AC  6EF8               	movwf	tblptru,c
   172   0013AE  0100               	movlb	0
   173   0013B0  EF1C  F009         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176   000031                     __pbssCOMRAM:
   177                           	callstack 0
   178   000031                     relay_toggle@F2905:
   179                           	callstack 0
   180   000031                     	ds	1
   181   000032                     relay_off@F2900:
   182                           	callstack 0
   183   000032                     	ds	1
   184   000033                     relay_on@F2895:
   185                           	callstack 0
   186   000033                     	ds	1
   187   000034                     relay_init@F2890:
   188                           	callstack 0
   189   000034                     	ds	1
   190   000035                     led_toggle@F2910:
   191                           	callstack 0
   192   000035                     	ds	1
   193   000036                     led_off@F2905:
   194                           	callstack 0
   195   000036                     	ds	1
   196   000037                     led_on@F2900:
   197                           	callstack 0
   198   000037                     	ds	1
   199   000038                     led_init@F2895:
   200                           	callstack 0
   201   000038                     	ds	1
   202                           
   203                           	psect	dataCOMRAM
   204   000001                     __pdataCOMRAM:
   205                           	callstack 0
   206   000001                     _port_reg:
   207                           	callstack 0
   208   000001                     	ds	10
   209   00000B                     _lat_reg:
   210                           	callstack 0
   211   00000B                     	ds	10
   212   000015                     _tris_reg:
   213                           	callstack 0
   214   000015                     	ds	10
   215   00001F                     _motor2:
   216                           	callstack 0
   217   00001F                     	ds	2
   218   000021                     _motor1:
   219                           	callstack 0
   220   000021                     	ds	2
   221                           
   222                           	psect	cstackCOMRAM
   223   000023                     __pcstackCOMRAM:
   224                           	callstack 0
   225   000023                     gpio_pin_direction_init@pin_confg:
   226                           	callstack 0
   227   000023                     gpio_pin_write@pin_confg:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x0
   231   000023                     	ds	1
   232   000024                     ??_gpio_pin_direction_init:
   233   000024                     gpio_pin_write@pin_state:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x1
   237   000024                     	ds	1
   238   000025                     ??_gpio_pin_write:
   239                           
   240                           ; 1 bytes @ 0x2
   241   000025                     	ds	4
   242   000029                     gpio_pin_direction_init@ret:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x6
   246   000029                     	ds	1
   247   00002A                     gpio_pin_write@ret:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x7
   251   00002A                     	ds	1
   252   00002B                     gpio_pin_init@pin_confg:
   253                           	callstack 0
   254   00002B                     dc_motor_move_right@dc_motor_obj:
   255                           	callstack 0
   256   00002B                     dc_motor_move_left@dc_motor_obj:
   257                           	callstack 0
   258   00002B                     dc_motor_stop@dc_motor_obj:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x8
   262   00002B                     	ds	1
   263   00002C                     ??_gpio_pin_init:
   264   00002C                     
   265                           ; 1 bytes @ 0x9
   266   00002C                     	ds	1
   267   00002D                     gpio_pin_init@ret:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0xA
   271   00002D                     	ds	1
   272   00002E                     dc_motor_init@dc_motor_obj:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0xB
   276   00002E                     	ds	1
   277   00002F                     ??_main:
   278                           
   279                           ; 1 bytes @ 0xC
   280   00002F                     	ds	2
   281                           
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 39 in file "application.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  2  241[None  ] int 
   294 ;; Registers used:
   295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;Total ram usage:        2 bytes
   306 ;; Hardware stack levels required when called: 4
   307 ;; This function calls:
   308 ;;		_app_init
   309 ;;		_dc_motor_move_left
   310 ;;		_dc_motor_move_right
   311 ;;		_dc_motor_stop
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text0
   318   001238                     __ptext0:
   319                           	callstack 0
   320   001238                     _main:
   321                           	callstack 27
   322   001238                     
   323                           ;application.c: 40:     app_init();
   324   001238  EC47  F00A         	call	_app_init	;wreg free
   325   00123C                     l242:
   326                           
   327                           ;application.c: 44:          ret=dc_motor_move_right(&motor1);
   328   00123C  0E21               	movlw	low _motor1
   329   00123E  6E2B               	movwf	dc_motor_move_right@dc_motor_obj^0,c
   330   001240  ECF2  F009         	call	_dc_motor_move_right	;wreg free
   331   001244  6E39               	movwf	_ret^0,c
   332                           
   333                           ;application.c: 45:          ret=dc_motor_move_right(&motor2);
   334   001246  0E1F               	movlw	low _motor2
   335   001248  6E2B               	movwf	dc_motor_move_right@dc_motor_obj^0,c
   336   00124A  ECF2  F009         	call	_dc_motor_move_right	;wreg free
   337   00124E  6E39               	movwf	_ret^0,c
   338   001250                     
   339                           ;application.c: 46:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   340   001250  0E1F               	movlw	31
   341   001252  6E30               	movwf	(??_main+1)^0,c
   342   001254  0E71               	movlw	113
   343   001256  6E2F               	movwf	??_main^0,c
   344   001258  0E1E               	movlw	30
   345   00125A                     u837:
   346   00125A  2EE8               	decfsz	wreg,f,c
   347   00125C  D7FE               	bra	u837
   348   00125E  2E2F               	decfsz	??_main^0,f,c
   349   001260  D7FC               	bra	u837
   350   001262  2E30               	decfsz	(??_main+1)^0,f,c
   351   001264  D7FA               	bra	u837
   352   001266  D000               	nop2	
   353   001268                     
   354                           ;application.c: 48:          ret=dc_motor_move_left(&motor1);
   355   001268  0E21               	movlw	low _motor1
   356   00126A  6E2B               	movwf	dc_motor_move_left@dc_motor_obj^0,c
   357   00126C  EC0A  F00A         	call	_dc_motor_move_left	;wreg free
   358   001270  6E39               	movwf	_ret^0,c
   359   001272                     
   360                           ;application.c: 49:          ret=dc_motor_move_left(&motor2);
   361   001272  0E1F               	movlw	low _motor2
   362   001274  6E2B               	movwf	dc_motor_move_left@dc_motor_obj^0,c
   363   001276  EC0A  F00A         	call	_dc_motor_move_left	;wreg free
   364   00127A  6E39               	movwf	_ret^0,c
   365   00127C                     
   366                           ;application.c: 50:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   367   00127C  0E1F               	movlw	31
   368   00127E  6E30               	movwf	(??_main+1)^0,c
   369   001280  0E71               	movlw	113
   370   001282  6E2F               	movwf	??_main^0,c
   371   001284  0E1E               	movlw	30
   372   001286                     u847:
   373   001286  2EE8               	decfsz	wreg,f,c
   374   001288  D7FE               	bra	u847
   375   00128A  2E2F               	decfsz	??_main^0,f,c
   376   00128C  D7FC               	bra	u847
   377   00128E  2E30               	decfsz	(??_main+1)^0,f,c
   378   001290  D7FA               	bra	u847
   379   001292  D000               	nop2	
   380                           
   381                           ;application.c: 52:          ret=dc_motor_move_right(&motor1);
   382   001294  0E21               	movlw	low _motor1
   383   001296  6E2B               	movwf	dc_motor_move_right@dc_motor_obj^0,c
   384   001298  ECF2  F009         	call	_dc_motor_move_right	;wreg free
   385   00129C  6E39               	movwf	_ret^0,c
   386                           
   387                           ;application.c: 53:          ret=dc_motor_move_left(&motor2);
   388   00129E  0E1F               	movlw	low _motor2
   389   0012A0  6E2B               	movwf	dc_motor_move_left@dc_motor_obj^0,c
   390   0012A2  EC0A  F00A         	call	_dc_motor_move_left	;wreg free
   391   0012A6  6E39               	movwf	_ret^0,c
   392   0012A8                     
   393                           ;application.c: 54:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   394   0012A8  0E1F               	movlw	31
   395   0012AA  6E30               	movwf	(??_main+1)^0,c
   396   0012AC  0E71               	movlw	113
   397   0012AE  6E2F               	movwf	??_main^0,c
   398   0012B0  0E1E               	movlw	30
   399   0012B2                     u857:
   400   0012B2  2EE8               	decfsz	wreg,f,c
   401   0012B4  D7FE               	bra	u857
   402   0012B6  2E2F               	decfsz	??_main^0,f,c
   403   0012B8  D7FC               	bra	u857
   404   0012BA  2E30               	decfsz	(??_main+1)^0,f,c
   405   0012BC  D7FA               	bra	u857
   406   0012BE  D000               	nop2	
   407   0012C0                     
   408                           ;application.c: 56:          ret=dc_motor_move_right(&motor2);
   409   0012C0  0E1F               	movlw	low _motor2
   410   0012C2  6E2B               	movwf	dc_motor_move_right@dc_motor_obj^0,c
   411   0012C4  ECF2  F009         	call	_dc_motor_move_right	;wreg free
   412   0012C8  6E39               	movwf	_ret^0,c
   413   0012CA                     
   414                           ;application.c: 57:          ret=dc_motor_move_left(&motor1);
   415   0012CA  0E21               	movlw	low _motor1
   416   0012CC  6E2B               	movwf	dc_motor_move_left@dc_motor_obj^0,c
   417   0012CE  EC0A  F00A         	call	_dc_motor_move_left	;wreg free
   418   0012D2  6E39               	movwf	_ret^0,c
   419   0012D4                     
   420                           ;application.c: 58:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   421   0012D4  0E1F               	movlw	31
   422   0012D6  6E30               	movwf	(??_main+1)^0,c
   423   0012D8  0E71               	movlw	113
   424   0012DA  6E2F               	movwf	??_main^0,c
   425   0012DC  0E1E               	movlw	30
   426   0012DE                     u867:
   427   0012DE  2EE8               	decfsz	wreg,f,c
   428   0012E0  D7FE               	bra	u867
   429   0012E2  2E2F               	decfsz	??_main^0,f,c
   430   0012E4  D7FC               	bra	u867
   431   0012E6  2E30               	decfsz	(??_main+1)^0,f,c
   432   0012E8  D7FA               	bra	u867
   433   0012EA  D000               	nop2	
   434                           
   435                           ;application.c: 60:          ret=dc_motor_stop(&motor1);
   436   0012EC  0E21               	movlw	low _motor1
   437   0012EE  6E2B               	movwf	dc_motor_stop@dc_motor_obj^0,c
   438   0012F0  ECDA  F009         	call	_dc_motor_stop	;wreg free
   439   0012F4  6E39               	movwf	_ret^0,c
   440                           
   441                           ;application.c: 61:          ret=dc_motor_stop(&motor2);
   442   0012F6  0E1F               	movlw	low _motor2
   443   0012F8  6E2B               	movwf	dc_motor_stop@dc_motor_obj^0,c
   444   0012FA  ECDA  F009         	call	_dc_motor_stop	;wreg free
   445   0012FE  6E39               	movwf	_ret^0,c
   446   001300                     
   447                           ;application.c: 62:         _delay((unsigned long)((3000)*(8000000/4000.0)));
   448   001300  0E1F               	movlw	31
   449   001302  6E30               	movwf	(??_main+1)^0,c
   450   001304  0E71               	movlw	113
   451   001306  6E2F               	movwf	??_main^0,c
   452   001308  0E1E               	movlw	30
   453   00130A                     u877:
   454   00130A  2EE8               	decfsz	wreg,f,c
   455   00130C  D7FE               	bra	u877
   456   00130E  2E2F               	decfsz	??_main^0,f,c
   457   001310  D7FC               	bra	u877
   458   001312  2E30               	decfsz	(??_main+1)^0,f,c
   459   001314  D7FA               	bra	u877
   460   001316  D000               	nop2	
   461   001318  EF1E  F009         	goto	l242
   462   00131C  EF00  F000         	goto	start
   463   001320                     __end_of_main:
   464                           	callstack 0
   465                           
   466 ;; *************** function _dc_motor_stop *****************
   467 ;; Defined at:
   468 ;;		line 91 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  dc_motor_obj    1    8[COMRAM] PTR const struct .
   471 ;;		 -> motor2(2), motor1(2), 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  ret             1    0        unsigned char 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      unsigned char 
   476 ;; Registers used:
   477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   483 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;Total ram usage:        1 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 1
   490 ;; This function calls:
   491 ;;		_gpio_pin_write
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text1
   498   0013B4                     __ptext1:
   499                           	callstack 0
   500   0013B4                     _dc_motor_stop:
   501                           	callstack 29
   502   0013B4                     
   503                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 93:     if(((void*)0) == dc_motor_obj)
   504   0013B4  502B               	movf	dc_motor_stop@dc_motor_obj^0,w,c
   505   0013B6  A4D8               	btfss	status,2,c
   506   0013B8  EFE0  F009         	goto	u691
   507   0013BC  EFE2  F009         	goto	u690
   508   0013C0                     u691:
   509   0013C0  EFE4  F009         	goto	l1593
   510   0013C4                     u690:
   511   0013C4                     
   512                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 96:     }
   513   0013C4  EFF0  F009         	goto	l1595
   514   0013C8                     l1593:
   515                           
   516                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 98:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 100:   
      +                                gpio_pin_write(&(dc_motor_obj->dc_motor_pin[0x00U]),GPIO_STATE_LOW);
   517   0013C8  C02B  F023         	movff	dc_motor_stop@dc_motor_obj,gpio_pin_write@pin_confg
   518   0013CC  0E00               	movlw	0
   519   0013CE  6E24               	movwf	gpio_pin_write@pin_state^0,c
   520   0013D0  EC94  F008         	call	_gpio_pin_write	;wreg free
   521                           
   522                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 101:         gpio_pin_write(&(dc_motor_obj->dc_motor
      +                          _pin[0x01U]),GPIO_STATE_LOW);
   523   0013D4  282B               	incf	dc_motor_stop@dc_motor_obj^0,w,c
   524   0013D6  6E23               	movwf	gpio_pin_write@pin_confg^0,c
   525   0013D8  0E00               	movlw	0
   526   0013DA  6E24               	movwf	gpio_pin_write@pin_state^0,c
   527   0013DC  EC94  F008         	call	_gpio_pin_write	;wreg free
   528   0013E0                     l1595:
   529                           
   530                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 104:     return ret;
   531   0013E0  0E00               	movlw	0
   532   0013E2  0012               	return		;funcret
   533   0013E4                     __end_of_dc_motor_stop:
   534                           	callstack 0
   535                           
   536 ;; *************** function _dc_motor_move_right *****************
   537 ;; Defined at:
   538 ;;		line 46 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  dc_motor_obj    1    8[COMRAM] PTR const struct .
   541 ;;		 -> motor2(2), motor1(2), 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  ret             1    0        unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      unsigned char 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		_gpio_pin_write
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text2
   568   0013E4                     __ptext2:
   569                           	callstack 0
   570   0013E4                     _dc_motor_move_right:
   571                           	callstack 29
   572   0013E4                     
   573                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 48:     if(((void*)0) == dc_motor_obj)
   574   0013E4  502B               	movf	dc_motor_move_right@dc_motor_obj^0,w,c
   575   0013E6  A4D8               	btfss	status,2,c
   576   0013E8  EFF8  F009         	goto	u671
   577   0013EC  EFFA  F009         	goto	u670
   578   0013F0                     u671:
   579   0013F0  EFFC  F009         	goto	l1573
   580   0013F4                     u670:
   581   0013F4                     
   582                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 51:     }
   583   0013F4  EF08  F00A         	goto	l1575
   584   0013F8                     l1573:
   585                           
   586                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 53:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 54:    
      +                               gpio_pin_write(&(dc_motor_obj->dc_motor_pin[0x00U]),GPIO_STATE_HIGH);
   587   0013F8  C02B  F023         	movff	dc_motor_move_right@dc_motor_obj,gpio_pin_write@pin_confg
   588   0013FC  0E01               	movlw	1
   589   0013FE  6E24               	movwf	gpio_pin_write@pin_state^0,c
   590   001400  EC94  F008         	call	_gpio_pin_write	;wreg free
   591                           
   592                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 55:         gpio_pin_write(&(dc_motor_obj->dc_motor_
      +                          pin[0x01U]),GPIO_STATE_LOW);
   593   001404  282B               	incf	dc_motor_move_right@dc_motor_obj^0,w,c
   594   001406  6E23               	movwf	gpio_pin_write@pin_confg^0,c
   595   001408  0E00               	movlw	0
   596   00140A  6E24               	movwf	gpio_pin_write@pin_state^0,c
   597   00140C  EC94  F008         	call	_gpio_pin_write	;wreg free
   598   001410                     l1575:
   599                           
   600                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 60:     return ret;
   601   001410  0E00               	movlw	0
   602   001412  0012               	return		;funcret
   603   001414                     __end_of_dc_motor_move_right:
   604                           	callstack 0
   605                           
   606 ;; *************** function _dc_motor_move_left *****************
   607 ;; Defined at:
   608 ;;		line 69 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  dc_motor_obj    1    8[COMRAM] PTR const struct .
   611 ;;		 -> motor2(2), motor1(2), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  ret             1    0        unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      unsigned char 
   616 ;; Registers used:
   617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		_gpio_pin_write
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text3
   638   001414                     __ptext3:
   639                           	callstack 0
   640   001414                     _dc_motor_move_left:
   641                           	callstack 29
   642   001414                     
   643                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 71:     if(((void*)0) == dc_motor_obj)
   644   001414  502B               	movf	dc_motor_move_left@dc_motor_obj^0,w,c
   645   001416  A4D8               	btfss	status,2,c
   646   001418  EF10  F00A         	goto	u681
   647   00141C  EF12  F00A         	goto	u680
   648   001420                     u681:
   649   001420  EF14  F00A         	goto	l1583
   650   001424                     u680:
   651   001424                     
   652                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 74:     }
   653   001424  EF20  F00A         	goto	l1585
   654   001428                     l1583:
   655                           
   656                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 76:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 77:    
      +                               gpio_pin_write(&(dc_motor_obj->dc_motor_pin[0x00U]),GPIO_STATE_LOW);
   657   001428  C02B  F023         	movff	dc_motor_move_left@dc_motor_obj,gpio_pin_write@pin_confg
   658   00142C  0E00               	movlw	0
   659   00142E  6E24               	movwf	gpio_pin_write@pin_state^0,c
   660   001430  EC94  F008         	call	_gpio_pin_write	;wreg free
   661                           
   662                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 78:         gpio_pin_write(&(dc_motor_obj->dc_motor_
      +                          pin[0x01U]),GPIO_STATE_HIGH);
   663   001434  282B               	incf	dc_motor_move_left@dc_motor_obj^0,w,c
   664   001436  6E23               	movwf	gpio_pin_write@pin_confg^0,c
   665   001438  0E01               	movlw	1
   666   00143A  6E24               	movwf	gpio_pin_write@pin_state^0,c
   667   00143C  EC94  F008         	call	_gpio_pin_write	;wreg free
   668   001440                     l1585:
   669                           
   670                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 82:     return ret;
   671   001440  0E00               	movlw	0
   672   001442  0012               	return		;funcret
   673   001444                     __end_of_dc_motor_move_left:
   674                           	callstack 0
   675                           
   676 ;; *************** function _app_init *****************
   677 ;; Defined at:
   678 ;;		line 70 in file "application.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 3
   699 ;; This function calls:
   700 ;;		_dc_motor_init
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text4
   707   00148E                     __ptext4:
   708                           	callstack 0
   709   00148E                     _app_init:
   710                           	callstack 27
   711   00148E                     
   712                           ;application.c: 72:     ret=dc_motor_init(&motor1);
   713   00148E  0E21               	movlw	low _motor1
   714   001490  6E2E               	movwf	dc_motor_init@dc_motor_obj^0,c
   715   001492  EC22  F00A         	call	_dc_motor_init	;wreg free
   716   001496  6E39               	movwf	_ret^0,c
   717                           
   718                           ;application.c: 73:     ret=dc_motor_init(&motor2);
   719   001498  0E1F               	movlw	low _motor2
   720   00149A  6E2E               	movwf	dc_motor_init@dc_motor_obj^0,c
   721   00149C  EC22  F00A         	call	_dc_motor_init	;wreg free
   722   0014A0  6E39               	movwf	_ret^0,c
   723   0014A2  0012               	return		;funcret
   724   0014A4                     __end_of_app_init:
   725                           	callstack 0
   726                           
   727 ;; *************** function _dc_motor_init *****************
   728 ;; Defined at:
   729 ;;		line 22 in file "ECU_Layer/DC_Motor/ecu_dc_motor.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  dc_motor_obj    1   11[COMRAM] PTR const struct .
   732 ;;		 -> motor2(2), motor1(2), 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  ret             1    0        unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      unsigned char 
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 2
   751 ;; This function calls:
   752 ;;		_gpio_pin_init
   753 ;; This function is called by:
   754 ;;		_app_init
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text5
   759   001444                     __ptext5:
   760                           	callstack 0
   761   001444                     _dc_motor_init:
   762                           	callstack 27
   763   001444                     
   764                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 24:     if(((void*)0) == dc_motor_obj)
   765   001444  502E               	movf	dc_motor_init@dc_motor_obj^0,w,c
   766   001446  A4D8               	btfss	status,2,c
   767   001448  EF28  F00A         	goto	u661
   768   00144C  EF2A  F00A         	goto	u660
   769   001450                     u661:
   770   001450  EF2C  F00A         	goto	l1561
   771   001454                     u660:
   772   001454                     
   773                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 27:     }
   774   001454  EF34  F00A         	goto	l1563
   775   001458                     l1561:
   776                           
   777                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 29:     {;ECU_Layer/DC_Motor/ecu_dc_motor.c: 30:    
      +                               gpio_pin_init(&(dc_motor_obj->dc_motor_pin[0x00U]));
   778   001458  C02E  F02B         	movff	dc_motor_init@dc_motor_obj,gpio_pin_init@pin_confg
   779   00145C  EC90  F009         	call	_gpio_pin_init	;wreg free
   780                           
   781                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 31:         gpio_pin_init(&(dc_motor_obj->dc_motor_p
      +                          in[0x01U]));
   782   001460  282E               	incf	dc_motor_init@dc_motor_obj^0,w,c
   783   001462  6E2B               	movwf	gpio_pin_init@pin_confg^0,c
   784   001464  EC90  F009         	call	_gpio_pin_init	;wreg free
   785   001468                     l1563:
   786                           
   787                           ;ECU_Layer/DC_Motor/ecu_dc_motor.c: 36:     return ret;
   788   001468  0E00               	movlw	0
   789   00146A  0012               	return		;funcret
   790   00146C                     __end_of_dc_motor_init:
   791                           	callstack 0
   792                           
   793 ;; *************** function _gpio_pin_init *****************
   794 ;; Defined at:
   795 ;;		line 170 in file "MCAL_Layer/GPIO/hal_gpio.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  pin_confg       1    8[COMRAM] PTR const struct .
   798 ;;		 -> relay_init@pin_obj(1), motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), 
   799 ;;		 -> motor1(2), led_init@pin_cfg(1), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  ret             1   10[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      unsigned char 
   804 ;; Registers used:
   805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        3 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 1
   818 ;; This function calls:
   819 ;;		_gpio_pin_direction_init
   820 ;;		_gpio_pin_write
   821 ;; This function is called by:
   822 ;;		_dc_motor_init
   823 ;;		_led_init
   824 ;;		_relay_init
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text6
   829   001320                     __ptext6:
   830                           	callstack 0
   831   001320                     _gpio_pin_init:
   832                           	callstack 27
   833   001320                     
   834                           ;MCAL_Layer/GPIO/hal_gpio.c: 172:     if(pin_confg == ((void*)0) ||(pin_confg->pin > 8 -
      +                          1))
   835   001320  502B               	movf	gpio_pin_init@pin_confg^0,w,c
   836   001322  B4D8               	btfsc	status,2,c
   837   001324  EF96  F009         	goto	u641
   838   001328  EF98  F009         	goto	u640
   839   00132C                     u641:
   840   00132C  EFA8  F009         	goto	l1549
   841   001330                     u640:
   842   001330  502B               	movf	gpio_pin_init@pin_confg^0,w,c
   843   001332  6ED9               	movwf	fsr2l,c
   844   001334  6ADA               	clrf	fsr2h,c
   845   001336  30DF               	rrcf	223,w,c
   846   001338  32E8               	rrcf	wreg,f,c
   847   00133A  32E8               	rrcf	wreg,f,c
   848   00133C  0B07               	andlw	7
   849   00133E  6E2C               	movwf	??_gpio_pin_init^0,c
   850   001340  0E07               	movlw	7
   851   001342  642C               	cpfsgt	??_gpio_pin_init^0,c
   852   001344  EFA6  F009         	goto	u651
   853   001348  EFA8  F009         	goto	u650
   854   00134C                     u651:
   855   00134C  EFAC  F009         	goto	l1551
   856   001350                     u650:
   857   001350                     l1549:
   858                           
   859                           ;MCAL_Layer/GPIO/hal_gpio.c: 173:     {;MCAL_Layer/GPIO/hal_gpio.c: 174:         ret=((S
      +                          td_RetrunType) 0x00);
   860   001350  0E00               	movlw	0
   861   001352  6E2D               	movwf	gpio_pin_init@ret^0,c
   862                           
   863                           ;MCAL_Layer/GPIO/hal_gpio.c: 175:     }
   864   001354  EFBD  F009         	goto	l1553
   865   001358                     l1551:
   866                           
   867                           ;MCAL_Layer/GPIO/hal_gpio.c: 177:     {;MCAL_Layer/GPIO/hal_gpio.c: 178:         ret=gpi
      +                          o_pin_direction_init(pin_confg);
   868   001358  C02B  F023         	movff	gpio_pin_init@pin_confg,gpio_pin_direction_init@pin_confg
   869   00135C  EC01  F008         	call	_gpio_pin_direction_init	;wreg free
   870   001360  6E2D               	movwf	gpio_pin_init@ret^0,c
   871                           
   872                           ;MCAL_Layer/GPIO/hal_gpio.c: 179:         ret=gpio_pin_write(pin_confg,pin_confg->state)
      +                          ;
   873   001362  C02B  F023         	movff	gpio_pin_init@pin_confg,gpio_pin_write@pin_confg
   874   001366  502B               	movf	gpio_pin_init@pin_confg^0,w,c
   875   001368  6ED9               	movwf	fsr2l,c
   876   00136A  6ADA               	clrf	fsr2h,c
   877   00136C  0E00               	movlw	0
   878   00136E  BEDF               	btfsc	indf2,7,c
   879   001370  0E01               	movlw	1
   880   001372  6E24               	movwf	gpio_pin_write@pin_state^0,c
   881   001374  EC94  F008         	call	_gpio_pin_write	;wreg free
   882   001378  6E2D               	movwf	gpio_pin_init@ret^0,c
   883   00137A                     l1553:
   884                           
   885                           ;MCAL_Layer/GPIO/hal_gpio.c: 183:     return ret;
   886   00137A  502D               	movf	gpio_pin_init@ret^0,w,c
   887   00137C  0012               	return		;funcret
   888   00137E                     __end_of_gpio_pin_init:
   889                           	callstack 0
   890                           
   891 ;; *************** function _gpio_pin_write *****************
   892 ;; Defined at:
   893 ;;		line 83 in file "MCAL_Layer/GPIO/hal_gpio.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  pin_confg       1    0[COMRAM] PTR const struct .
   896 ;;		 -> relay_off@pin_obj(1), relay_on@pin_obj(1), relay_init@pin_obj(1), motor2$dc_motor_pin(2), 
   897 ;;		 -> motor2(2), motor1$dc_motor_pin(2), motor1(2), led_off@pin_cfg(1), 
   898 ;;		 -> led_on@pin_cfg(1), led_init@pin_cfg(1), 
   899 ;;  pin_state       1    1[COMRAM] enum E2815
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  ret             1    7[COMRAM] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      unsigned char 
   904 ;; Registers used:
   905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;Total ram usage:        8 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_gpio_pin_init
   921 ;;		_dc_motor_move_right
   922 ;;		_dc_motor_move_left
   923 ;;		_dc_motor_stop
   924 ;;		_led_on
   925 ;;		_led_off
   926 ;;		_relay_on
   927 ;;		_relay_off
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text7
   932   001128                     __ptext7:
   933                           	callstack 0
   934   001128                     _gpio_pin_write:
   935                           	callstack 29
   936   001128                     
   937                           ;MCAL_Layer/GPIO/hal_gpio.c: 84:     Std_RetrunType ret = ((Std_RetrunType) 0x01);
   938   001128  0E01               	movlw	1
   939   00112A  6E2A               	movwf	gpio_pin_write@ret^0,c
   940                           
   941                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:     if(pin_confg == ((void*)0) ||(pin_confg->pin > 8 -1
      +                          ))
   942   00112C  5023               	movf	gpio_pin_write@pin_confg^0,w,c
   943   00112E  B4D8               	btfsc	status,2,c
   944   001130  EF9C  F008         	goto	u541
   945   001134  EF9E  F008         	goto	u540
   946   001138                     u541:
   947   001138  EFAE  F008         	goto	l1505
   948   00113C                     u540:
   949   00113C  5023               	movf	gpio_pin_write@pin_confg^0,w,c
   950   00113E  6ED9               	movwf	fsr2l,c
   951   001140  6ADA               	clrf	fsr2h,c
   952   001142  30DF               	rrcf	223,w,c
   953   001144  32E8               	rrcf	wreg,f,c
   954   001146  32E8               	rrcf	wreg,f,c
   955   001148  0B07               	andlw	7
   956   00114A  6E25               	movwf	??_gpio_pin_write^0,c
   957   00114C  0E07               	movlw	7
   958   00114E  6425               	cpfsgt	??_gpio_pin_write^0,c
   959   001150  EFAC  F008         	goto	u551
   960   001154  EFAE  F008         	goto	u550
   961   001158                     u551:
   962   001158  EF05  F009         	goto	l1513
   963   00115C                     u550:
   964   00115C                     l1505:
   965                           
   966                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:     {;MCAL_Layer/GPIO/hal_gpio.c: 87:         ret=((Std
      +                          _RetrunType) 0x00);
   967   00115C  0E00               	movlw	0
   968   00115E  6E2A               	movwf	gpio_pin_write@ret^0,c
   969                           
   970                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:     }
   971   001160  EF1A  F009         	goto	l1515
   972   001164                     l1507:
   973                           
   974                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:                 (*lat_reg[pin_confg->port] &=~ ((uint8)
      +                           1<<pin_confg->pin));
   975   001164  5023               	movf	gpio_pin_write@pin_confg^0,w,c
   976   001166  6ED9               	movwf	fsr2l,c
   977   001168  6ADA               	clrf	fsr2h,c
   978   00116A  30DF               	rrcf	223,w,c
   979   00116C  32E8               	rrcf	wreg,f,c
   980   00116E  32E8               	rrcf	wreg,f,c
   981   001170  0B07               	andlw	7
   982   001172  6E25               	movwf	??_gpio_pin_write^0,c
   983   001174  0E01               	movlw	1
   984   001176  6E26               	movwf	(??_gpio_pin_write+1)^0,c
   985   001178  2A25               	incf	??_gpio_pin_write^0,f,c
   986   00117A  EFC1  F008         	goto	u564
   987   00117E                     u565:
   988   00117E  90D8               	bcf	status,0,c
   989   001180  3626               	rlcf	(??_gpio_pin_write+1)^0,f,c
   990   001182                     u564:
   991   001182  2E25               	decfsz	??_gpio_pin_write^0,f,c
   992   001184  EFBF  F008         	goto	u565
   993   001188  5026               	movf	(??_gpio_pin_write+1)^0,w,c
   994   00118A  0AFF               	xorlw	255
   995   00118C  6E27               	movwf	(??_gpio_pin_write+2)^0,c
   996   00118E  5023               	movf	gpio_pin_write@pin_confg^0,w,c
   997   001190  6ED9               	movwf	fsr2l,c
   998   001192  6ADA               	clrf	fsr2h,c
   999   001194  50DF               	movf	223,w,c
  1000   001196  0B07               	andlw	7
  1001   001198  0D02               	mullw	2
  1002   00119A  50F3               	movf	243,w,c
  1003   00119C  0F0B               	addlw	low _lat_reg
  1004   00119E  6ED9               	movwf	fsr2l,c
  1005   0011A0  6ADA               	clrf	fsr2h,c
  1006   0011A2  CFDE F028          	movff	postinc2,??_gpio_pin_write+3
  1007   0011A6  CFDD F029          	movff	postdec2,??_gpio_pin_write+4
  1008   0011AA  C028  FFD9         	movff	??_gpio_pin_write+3,fsr2l
  1009   0011AE  C029  FFDA         	movff	??_gpio_pin_write+4,fsr2h
  1010   0011B2  5027               	movf	(??_gpio_pin_write+2)^0,w,c
  1011   0011B4  16DF               	andwf	indf2,f,c
  1012                           
  1013                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:                 break;
  1014   0011B6  EF1A  F009         	goto	l1515
  1015   0011BA                     l1509:
  1016                           
  1017                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:                 (*lat_reg[pin_confg->port] |= ((uint8) 
      +                          1<<pin_confg->pin));
  1018   0011BA  5023               	movf	gpio_pin_write@pin_confg^0,w,c
  1019   0011BC  6ED9               	movwf	fsr2l,c
  1020   0011BE  6ADA               	clrf	fsr2h,c
  1021   0011C0  30DF               	rrcf	223,w,c
  1022   0011C2  32E8               	rrcf	wreg,f,c
  1023   0011C4  32E8               	rrcf	wreg,f,c
  1024   0011C6  0B07               	andlw	7
  1025   0011C8  6E25               	movwf	??_gpio_pin_write^0,c
  1026   0011CA  0E01               	movlw	1
  1027   0011CC  6E26               	movwf	(??_gpio_pin_write+1)^0,c
  1028   0011CE  2A25               	incf	??_gpio_pin_write^0,f,c
  1029   0011D0  EFEC  F008         	goto	u574
  1030   0011D4                     u575:
  1031   0011D4  90D8               	bcf	status,0,c
  1032   0011D6  3626               	rlcf	(??_gpio_pin_write+1)^0,f,c
  1033   0011D8                     u574:
  1034   0011D8  2E25               	decfsz	??_gpio_pin_write^0,f,c
  1035   0011DA  EFEA  F008         	goto	u575
  1036   0011DE  5023               	movf	gpio_pin_write@pin_confg^0,w,c
  1037   0011E0  6ED9               	movwf	fsr2l,c
  1038   0011E2  6ADA               	clrf	fsr2h,c
  1039   0011E4  50DF               	movf	223,w,c
  1040   0011E6  0B07               	andlw	7
  1041   0011E8  0D02               	mullw	2
  1042   0011EA  50F3               	movf	243,w,c
  1043   0011EC  0F0B               	addlw	low _lat_reg
  1044   0011EE  6ED9               	movwf	fsr2l,c
  1045   0011F0  6ADA               	clrf	fsr2h,c
  1046   0011F2  CFDE F027          	movff	postinc2,??_gpio_pin_write+2
  1047   0011F6  CFDD F028          	movff	postdec2,??_gpio_pin_write+3
  1048   0011FA  C027  FFD9         	movff	??_gpio_pin_write+2,fsr2l
  1049   0011FE  C028  FFDA         	movff	??_gpio_pin_write+3,fsr2h
  1050   001202  5026               	movf	(??_gpio_pin_write+1)^0,w,c
  1051   001204  12DF               	iorwf	indf2,f,c
  1052                           
  1053                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:                 break;
  1054   001206  EF1A  F009         	goto	l1515
  1055   00120A                     l1513:
  1056   00120A  5024               	movf	gpio_pin_write@pin_state^0,w,c
  1057   00120C  6E25               	movwf	??_gpio_pin_write^0,c
  1058   00120E  6A26               	clrf	(??_gpio_pin_write+1)^0,c
  1059                           
  1060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1061                           ; Switch size 1, requested type "simple"
  1062                           ; Number of cases is 1, Range of values is 0 to 0
  1063                           ; switch strategies available:
  1064                           ; Name         Instructions Cycles
  1065                           ; simple_byte            4     3 (average)
  1066                           ;	Chosen strategy is simple_byte
  1067   001210  5026               	movf	(??_gpio_pin_write+1)^0,w,c
  1068   001212  0A00               	xorlw	0	; case 0
  1069   001214  B4D8               	btfsc	status,2,c
  1070   001216  EF0F  F009         	goto	l1733
  1071   00121A  EFAE  F008         	goto	l1505
  1072   00121E                     l1733:
  1073                           
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 2, Range of values is 0 to 1
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte            7     4 (average)
  1079                           ;	Chosen strategy is simple_byte
  1080   00121E  5025               	movf	??_gpio_pin_write^0,w,c
  1081   001220  0A00               	xorlw	0	; case 0
  1082   001222  B4D8               	btfsc	status,2,c
  1083   001224  EFB2  F008         	goto	l1507
  1084   001228  0A01               	xorlw	1	; case 1
  1085   00122A  B4D8               	btfsc	status,2,c
  1086   00122C  EFDD  F008         	goto	l1509
  1087   001230  EFAE  F008         	goto	l1505
  1088   001234                     l1515:
  1089                           
  1090                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:     return ret;
  1091   001234  502A               	movf	gpio_pin_write@ret^0,w,c
  1092   001236  0012               	return		;funcret
  1093   001238                     __end_of_gpio_pin_write:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _gpio_pin_direction_init *****************
  1097 ;; Defined at:
  1098 ;;		line 19 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  pin_confg       1    0[COMRAM] PTR const struct .
  1101 ;;		 -> relay_init@pin_obj(1), motor2$dc_motor_pin(2), motor2(2), motor1$dc_motor_pin(2), 
  1102 ;;		 -> motor1(2), led_init@pin_cfg(1), 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  ret             1    6[COMRAM] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      unsigned char 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1114 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;Total ram usage:        7 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_gpio_pin_init
  1124 ;;		_button_init
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text8
  1129   001002                     __ptext8:
  1130                           	callstack 0
  1131   001002                     _gpio_pin_direction_init:
  1132                           	callstack 27
  1133   001002                     
  1134                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     Std_RetrunType ret = ((Std_RetrunType) 0x01);
  1135   001002  0E01               	movlw	1
  1136   001004  6E29               	movwf	gpio_pin_direction_init@ret^0,c
  1137                           
  1138                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     if(pin_confg == ((void*)0) || (pin_confg->pin > 8 -
      +                          1))
  1139   001006  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1140   001008  B4D8               	btfsc	status,2,c
  1141   00100A  EF09  F008         	goto	u581
  1142   00100E  EF0B  F008         	goto	u580
  1143   001012                     u581:
  1144   001012  EF1B  F008         	goto	l1527
  1145   001016                     u580:
  1146   001016  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1147   001018  6ED9               	movwf	fsr2l,c
  1148   00101A  6ADA               	clrf	fsr2h,c
  1149   00101C  30DF               	rrcf	223,w,c
  1150   00101E  32E8               	rrcf	wreg,f,c
  1151   001020  32E8               	rrcf	wreg,f,c
  1152   001022  0B07               	andlw	7
  1153   001024  6E24               	movwf	??_gpio_pin_direction_init^0,c
  1154   001026  0E07               	movlw	7
  1155   001028  6424               	cpfsgt	??_gpio_pin_direction_init^0,c
  1156   00102A  EF19  F008         	goto	u591
  1157   00102E  EF1B  F008         	goto	u590
  1158   001032                     u591:
  1159   001032  EF72  F008         	goto	l1535
  1160   001036                     u590:
  1161   001036                     l1527:
  1162                           
  1163                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:     {;MCAL_Layer/GPIO/hal_gpio.c: 23:         ret=((Std
      +                          _RetrunType) 0x00);
  1164   001036  0E00               	movlw	0
  1165   001038  6E29               	movwf	gpio_pin_direction_init@ret^0,c
  1166                           
  1167                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:     }
  1168   00103A  EF92  F008         	goto	l1537
  1169   00103E                     l1529:
  1170                           
  1171                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:                 (*tris_reg[pin_confg->port] &=~ ((uint8
      +                          ) 1<<pin_confg->pin));
  1172   00103E  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1173   001040  6ED9               	movwf	fsr2l,c
  1174   001042  6ADA               	clrf	fsr2h,c
  1175   001044  30DF               	rrcf	223,w,c
  1176   001046  32E8               	rrcf	wreg,f,c
  1177   001048  32E8               	rrcf	wreg,f,c
  1178   00104A  0B07               	andlw	7
  1179   00104C  6E24               	movwf	??_gpio_pin_direction_init^0,c
  1180   00104E  0E01               	movlw	1
  1181   001050  6E25               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1182   001052  2A24               	incf	??_gpio_pin_direction_init^0,f,c
  1183   001054  EF2E  F008         	goto	u604
  1184   001058                     u605:
  1185   001058  90D8               	bcf	status,0,c
  1186   00105A  3625               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1187   00105C                     u604:
  1188   00105C  2E24               	decfsz	??_gpio_pin_direction_init^0,f,c
  1189   00105E  EF2C  F008         	goto	u605
  1190   001062  5025               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1191   001064  0AFF               	xorlw	255
  1192   001066  6E26               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1193   001068  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1194   00106A  6ED9               	movwf	fsr2l,c
  1195   00106C  6ADA               	clrf	fsr2h,c
  1196   00106E  50DF               	movf	223,w,c
  1197   001070  0B07               	andlw	7
  1198   001072  0D02               	mullw	2
  1199   001074  50F3               	movf	243,w,c
  1200   001076  0F15               	addlw	low _tris_reg
  1201   001078  6ED9               	movwf	fsr2l,c
  1202   00107A  6ADA               	clrf	fsr2h,c
  1203   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_init+3
  1204   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_init+4
  1205   001084  C027  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1206   001088  C028  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1207   00108C  5026               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1208   00108E  16DF               	andwf	indf2,f,c
  1209                           
  1210                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 break;
  1211   001090  EF92  F008         	goto	l1537
  1212   001094                     l1531:
  1213                           
  1214                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:                 (*tris_reg[pin_confg->port] |= ((uint8)
      +                           1<<pin_confg->pin));
  1215   001094  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1216   001096  6ED9               	movwf	fsr2l,c
  1217   001098  6ADA               	clrf	fsr2h,c
  1218   00109A  30DF               	rrcf	223,w,c
  1219   00109C  32E8               	rrcf	wreg,f,c
  1220   00109E  32E8               	rrcf	wreg,f,c
  1221   0010A0  0B07               	andlw	7
  1222   0010A2  6E24               	movwf	??_gpio_pin_direction_init^0,c
  1223   0010A4  0E01               	movlw	1
  1224   0010A6  6E25               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1225   0010A8  2A24               	incf	??_gpio_pin_direction_init^0,f,c
  1226   0010AA  EF59  F008         	goto	u614
  1227   0010AE                     u615:
  1228   0010AE  90D8               	bcf	status,0,c
  1229   0010B0  3625               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1230   0010B2                     u614:
  1231   0010B2  2E24               	decfsz	??_gpio_pin_direction_init^0,f,c
  1232   0010B4  EF57  F008         	goto	u615
  1233   0010B8  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1234   0010BA  6ED9               	movwf	fsr2l,c
  1235   0010BC  6ADA               	clrf	fsr2h,c
  1236   0010BE  50DF               	movf	223,w,c
  1237   0010C0  0B07               	andlw	7
  1238   0010C2  0D02               	mullw	2
  1239   0010C4  50F3               	movf	243,w,c
  1240   0010C6  0F15               	addlw	low _tris_reg
  1241   0010C8  6ED9               	movwf	fsr2l,c
  1242   0010CA  6ADA               	clrf	fsr2h,c
  1243   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_init+2
  1244   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_init+3
  1245   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_init+2,fsr2l
  1246   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_init+3,fsr2h
  1247   0010DC  5025               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1248   0010DE  12DF               	iorwf	indf2,f,c
  1249                           
  1250                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 break;
  1251   0010E0  EF92  F008         	goto	l1537
  1252   0010E4                     l1535:
  1253   0010E4  5023               	movf	gpio_pin_direction_init@pin_confg^0,w,c
  1254   0010E6  6ED9               	movwf	fsr2l,c
  1255   0010E8  6ADA               	clrf	fsr2h,c
  1256   0010EA  BCDF               	btfsc	indf2,6,c
  1257   0010EC  EF7A  F008         	goto	u621
  1258   0010F0  EF7D  F008         	goto	u620
  1259   0010F4                     u621:
  1260   0010F4  0E01               	movlw	1
  1261   0010F6  EF7E  F008         	goto	u630
  1262   0010FA                     u620:
  1263   0010FA  0E00               	movlw	0
  1264   0010FC                     u630:
  1265   0010FC  6E24               	movwf	??_gpio_pin_direction_init^0,c
  1266   0010FE  6A25               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1267                           
  1268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 1, Range of values is 0 to 0
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            4     3 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275   001100  5025               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1276   001102  0A00               	xorlw	0	; case 0
  1277   001104  B4D8               	btfsc	status,2,c
  1278   001106  EF87  F008         	goto	l1735
  1279   00110A  EF1B  F008         	goto	l1527
  1280   00110E                     l1735:
  1281                           
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 2, Range of values is 0 to 1
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            7     4 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288   00110E  5024               	movf	??_gpio_pin_direction_init^0,w,c
  1289   001110  0A00               	xorlw	0	; case 0
  1290   001112  B4D8               	btfsc	status,2,c
  1291   001114  EF1F  F008         	goto	l1529
  1292   001118  0A01               	xorlw	1	; case 1
  1293   00111A  B4D8               	btfsc	status,2,c
  1294   00111C  EF4A  F008         	goto	l1531
  1295   001120  EF1B  F008         	goto	l1527
  1296   001124                     l1537:
  1297                           
  1298                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     return ret;
  1299   001124  5029               	movf	gpio_pin_direction_init@ret^0,w,c
  1300   001126  0012               	return		;funcret
  1301   001128                     __end_of_gpio_pin_direction_init:
  1302                           	callstack 0
  1303                           
  1304                           	psect	smallconst
  1305   001000                     __psmallconst:
  1306                           	callstack 0
  1307   001000  00                 	db	0
  1308   001001  00                 	db	0	; dummy byte at the end
  1309   000000                     
  1310                           	psect	rparam
  1311   000000                     
  1312                           	psect	idloc
  1313                           
  1314                           ;Config register IDLOC0 @ 0x200000
  1315                           ;	unspecified, using default values
  1316   200000                     	org	2097152
  1317   200000  FF                 	db	255
  1318                           
  1319                           ;Config register IDLOC1 @ 0x200001
  1320                           ;	unspecified, using default values
  1321   200001                     	org	2097153
  1322   200001  FF                 	db	255
  1323                           
  1324                           ;Config register IDLOC2 @ 0x200002
  1325                           ;	unspecified, using default values
  1326   200002                     	org	2097154
  1327   200002  FF                 	db	255
  1328                           
  1329                           ;Config register IDLOC3 @ 0x200003
  1330                           ;	unspecified, using default values
  1331   200003                     	org	2097155
  1332   200003  FF                 	db	255
  1333                           
  1334                           ;Config register IDLOC4 @ 0x200004
  1335                           ;	unspecified, using default values
  1336   200004                     	org	2097156
  1337   200004  FF                 	db	255
  1338                           
  1339                           ;Config register IDLOC5 @ 0x200005
  1340                           ;	unspecified, using default values
  1341   200005                     	org	2097157
  1342   200005  FF                 	db	255
  1343                           
  1344                           ;Config register IDLOC6 @ 0x200006
  1345                           ;	unspecified, using default values
  1346   200006                     	org	2097158
  1347   200006  FF                 	db	255
  1348                           
  1349                           ;Config register IDLOC7 @ 0x200007
  1350                           ;	unspecified, using default values
  1351   200007                     	org	2097159
  1352   200007  FF                 	db	255
  1353                           
  1354                           	psect	config
  1355                           
  1356                           ; Padding undefined space
  1357   300000                     	org	3145728
  1358   300000  FF                 	db	255
  1359                           
  1360                           ;Config register CONFIG1H @ 0x300001
  1361                           ;	Oscillator Selection bits
  1362                           ;	OSC = HS, HS oscillator
  1363                           ;	Fail-Safe Clock Monitor Enable bit
  1364                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1365                           ;	Internal/External Oscillator Switchover bit
  1366                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1367   300001                     	org	3145729
  1368   300001  02                 	db	2
  1369                           
  1370                           ;Config register CONFIG2L @ 0x300002
  1371                           ;	Power-up Timer Enable bit
  1372                           ;	PWRT = OFF, PWRT disabled
  1373                           ;	Brown-out Reset Enable bits
  1374                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1375                           ;	Brown Out Reset Voltage bits
  1376                           ;	BORV = 1, 
  1377   300002                     	org	3145730
  1378   300002  09                 	db	9
  1379                           
  1380                           ;Config register CONFIG2H @ 0x300003
  1381                           ;	Watchdog Timer Enable bit
  1382                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1383                           ;	Watchdog Timer Postscale Select bits
  1384                           ;	WDTPS = 32768, 1:32768
  1385   300003                     	org	3145731
  1386   300003  1E                 	db	30
  1387                           
  1388                           ; Padding undefined space
  1389   300004                     	org	3145732
  1390   300004  FF                 	db	255
  1391                           
  1392                           ;Config register CONFIG3H @ 0x300005
  1393                           ;	CCP2 MUX bit
  1394                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1395                           ;	PORTB A/D Enable bit
  1396                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1397                           ;	Low-Power Timer1 Oscillator Enable bit
  1398                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1399                           ;	MCLR Pin Enable bit
  1400                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1401   300005                     	org	3145733
  1402   300005  81                 	db	129
  1403                           
  1404                           ;Config register CONFIG4L @ 0x300006
  1405                           ;	Stack Full/Underflow Reset Enable bit
  1406                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1407                           ;	Single-Supply ICSP Enable bit
  1408                           ;	LVP = OFF, Single-Supply ICSP disabled
  1409                           ;	Extended Instruction Set Enable bit
  1410                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1411                           ;	Background Debugger Enable bit
  1412                           ;	DEBUG = 0x1, unprogrammed default
  1413   300006                     	org	3145734
  1414   300006  81                 	db	129
  1415                           
  1416                           ; Padding undefined space
  1417   300007                     	org	3145735
  1418   300007  FF                 	db	255
  1419                           
  1420                           ;Config register CONFIG5L @ 0x300008
  1421                           ;	Code Protection bit
  1422                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1423                           ;	Code Protection bit
  1424                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1425                           ;	Code Protection bit
  1426                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1427                           ;	Code Protection bit
  1428                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1429   300008                     	org	3145736
  1430   300008  0F                 	db	15
  1431                           
  1432                           ;Config register CONFIG5H @ 0x300009
  1433                           ;	Boot Block Code Protection bit
  1434                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1435                           ;	Data EEPROM Code Protection bit
  1436                           ;	CPD = OFF, Data EEPROM not code-protected
  1437   300009                     	org	3145737
  1438   300009  C0                 	db	192
  1439                           
  1440                           ;Config register CONFIG6L @ 0x30000A
  1441                           ;	Write Protection bit
  1442                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1443                           ;	Write Protection bit
  1444                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1445                           ;	Write Protection bit
  1446                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1447                           ;	Write Protection bit
  1448                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1449   30000A                     	org	3145738
  1450   30000A  0F                 	db	15
  1451                           
  1452                           ;Config register CONFIG6H @ 0x30000B
  1453                           ;	Configuration Register Write Protection bit
  1454                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1455                           ;	Boot Block Write Protection bit
  1456                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1457                           ;	Data EEPROM Write Protection bit
  1458                           ;	WRTD = OFF, Data EEPROM not write-protected
  1459   30000B                     	org	3145739
  1460   30000B  E0                 	db	224
  1461                           
  1462                           ;Config register CONFIG7L @ 0x30000C
  1463                           ;	Table Read Protection bit
  1464                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1465                           ;	Table Read Protection bit
  1466                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1467                           ;	Table Read Protection bit
  1468                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1469                           ;	Table Read Protection bit
  1470                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1471   30000C                     	org	3145740
  1472   30000C  0F                 	db	15
  1473                           
  1474                           ;Config register CONFIG7H @ 0x30000D
  1475                           ;	Boot Block Table Read Protection bit
  1476                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1477   30000D                     	org	3145741
  1478   30000D  40                 	db	64
  1479                           tosu	equ	0xFFF
  1480                           tosh	equ	0xFFE
  1481                           tosl	equ	0xFFD
  1482                           stkptr	equ	0xFFC
  1483                           pclatu	equ	0xFFB
  1484                           pclath	equ	0xFFA
  1485                           pcl	equ	0xFF9
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           prodh	equ	0xFF4
  1491                           prodl	equ	0xFF3
  1492                           indf0	equ	0xFEF
  1493                           postinc0	equ	0xFEE
  1494                           postdec0	equ	0xFED
  1495                           preinc0	equ	0xFEC
  1496                           plusw0	equ	0xFEB
  1497                           fsr0h	equ	0xFEA
  1498                           fsr0l	equ	0xFE9
  1499                           wreg	equ	0xFE8
  1500                           indf1	equ	0xFE7
  1501                           postinc1	equ	0xFE6
  1502                           postdec1	equ	0xFE5
  1503                           preinc1	equ	0xFE4
  1504                           plusw1	equ	0xFE3
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           bsr	equ	0xFE0
  1508                           indf2	equ	0xFDF
  1509                           postinc2	equ	0xFDE
  1510                           postdec2	equ	0xFDD
  1511                           preinc2	equ	0xFDC
  1512                           plusw2	equ	0xFDB
  1513                           fsr2h	equ	0xFDA
  1514                           fsr2l	equ	0xFD9
  1515                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         8
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_init@dc_motor_obj	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    dc_motor_move_left@dc_motor_obj	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    dc_motor_move_right@dc_motor_obj	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    dc_motor_stop@dc_motor_obj	PTR const struct . size(1) Largest target is 2
		 -> motor1(COMRAM[2]), motor2(COMRAM[2]), 

    gpio_pin_direction_init@pin_confg	PTR const struct . size(1) Largest target is 2
		 -> led_init@pin_cfg(COMRAM[1]), motor1(COMRAM[2]), motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), 
		 -> motor2$dc_motor_pin(COMRAM[2]), relay_init@pin_obj(COMRAM[1]), 

    gpio_pin_init@pin_confg	PTR const struct . size(1) Largest target is 2
		 -> led_init@pin_cfg(COMRAM[1]), motor1(COMRAM[2]), motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), 
		 -> motor2$dc_motor_pin(COMRAM[2]), relay_init@pin_obj(COMRAM[1]), 

    gpio_pin_write@pin_confg	PTR const struct . size(1) Largest target is 2
		 -> led_init@pin_cfg(COMRAM[1]), led_off@pin_cfg(COMRAM[1]), led_on@pin_cfg(COMRAM[1]), motor1(COMRAM[2]), 
		 -> motor1$dc_motor_pin(COMRAM[2]), motor2(COMRAM[2]), motor2$dc_motor_pin(COMRAM[2]), relay_init@pin_obj(COMRAM[1]), 
		 -> relay_off@pin_obj(COMRAM[1]), relay_on@pin_obj(COMRAM[1]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _dc_motor_stop->_gpio_pin_write
    _dc_motor_move_right->_gpio_pin_write
    _dc_motor_move_left->_gpio_pin_write
    _app_init->_dc_motor_init
    _dc_motor_init->_gpio_pin_init
    _gpio_pin_init->_gpio_pin_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9447
                                             12 COMRAM     2     2      0
                           _app_init
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2093
                                              8 COMRAM     1     0      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2245
                                              8 COMRAM     1     0      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2245
                                              8 COMRAM     1     0      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0    2864
                      _dc_motor_init
 ---------------------------------------------------------------------------------
 (2) _dc_motor_init                                        2     1      1    2864
                                             11 COMRAM     1     0      1
                      _gpio_pin_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_init                                        3     2      1    2622
                                              8 COMRAM     3     2      1
            _gpio_pin_direction_init
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write                                       8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                              7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _dc_motor_init
       _gpio_pin_init
         _gpio_pin_direction_init
         _gpio_pin_write
   _dc_motor_move_left
     _gpio_pin_write
   _dc_motor_move_right
     _gpio_pin_write
   _dc_motor_stop
     _gpio_pin_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      39       1       44.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      39        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Aug 26 14:12:51 2024

                             l118 1126                               l137 1236                               l242 123C  
                             l158 137C                               l424 146A                               l248 14A2  
                             l434 1442                               l429 1412                               l439 13E2  
                             u620 10FA                               u604 105C                               u540 113C  
                             u621 10F4                               u605 1058                               u541 1138  
                             u630 10FC                               u614 10B2                               u550 115C  
                             u615 10AE                               u551 1158                               u640 1330  
                             u641 132C                               u650 1350                               u651 134C  
                             u580 1016                               u564 1182                               u660 1454  
                             u581 1012                               u565 117E                               u661 1450  
                             u590 1036                               u574 11D8                               u670 13F4  
                             u591 1032                               u575 11D4                               u671 13F0  
                             u680 1424                               u681 1420                               u690 13C4  
                             u691 13C0                               u837 125A                               u847 1286  
                             u857 12B2                               u867 12DE                               u877 130A  
                             _ret 0039                               wreg 0FE8                       led_on@F2900 0037  
                            l1501 1128                              l1503 113C                              l1513 120A  
                            l1505 115C                              l1531 1094                              l1523 1002  
                            l1507 1164                              l1515 1234                              l1525 1016  
                            l1509 11BA                              l1535 10E4                              l1527 1036  
                            l1551 1358                              l1529 103E                              l1537 1124  
                            l1553 137A                              l1545 1320                              l1561 1458  
                            l1547 1330                              l1563 1468                              l1571 13F4  
                            l1651 1268                              l1733 121E                              l1549 1350  
                            l1557 1444                              l1581 1424                              l1573 13F8  
                            l1661 12CA                              l1653 1272                              l1735 110E  
                            l1559 1454                              l1567 148E                              l1583 1428  
                            l1575 1410                              l1591 13C4                              l1663 12D4  
                            l1655 127C                              l1647 1238                              l1585 1440  
                            l1569 13E4                              l1593 13C8                              l1665 1300  
                            l1657 12A8                              l1649 1250                              l1579 1414  
                            l1595 13E0                              l1659 12C0                              l1589 13B4  
                            _LATA 0F89                              _LATB 0F8A                              _LATC 0F8B  
                            _LATD 0F8C                              _LATE 0F8D                              _main 1238  
                            fsr2h 0FDA                              indf2 0FDF                              fsr1l 0FE1  
                            fsr2l 0FD9          ?_gpio_pin_direction_init 0023                              prodl 0FF3  
                            start 0000                      ___param_bank 0000                             ?_main 0023  
               gpio_pin_write@ret 002A                      led_off@F2905 0036                             _PORTA 0F80  
                           _PORTB 0F81                             _PORTC 0F82                             _PORTD 0F83  
                           _PORTE 0F84                             _TRISA 0F92                             _TRISB 0F93  
                           _TRISC 0F94                             _TRISD 0F95                             _TRISE 0F96  
 dc_motor_move_right@dc_motor_obj 002B                             tablat 0FF5                             status 0FD8  
                 __initialization 137E                      __end_of_main 1320                            ??_main 002F  
                   __activetblptr 0002                  __end_of_app_init 14A4       __end_of_dc_motor_move_right 1414  
                   _gpio_pin_init 1320                            clear_0 13A4                            _motor1 0021  
                          _motor2 001F                            isa$std 0001                     led_init@F2895 0038  
                    __pdataCOMRAM 0001                      __mediumconst 0000                            tblptrh 0FF7  
                          tblptrl 0FF6                            tblptru 0FF8                        __accesstop 0080  
         __end_of__initialization 13AA                     ___rparam_used 0001                    __pcstackCOMRAM 0023  
                  ?_gpio_pin_init 002B         dc_motor_init@dc_motor_obj 002E                        __pnvCOMRAM 0039  
                 led_toggle@F2910 0035                         ?_app_init 0023                           __Hparam 0000  
                         __Lparam 0000                   ??_gpio_pin_init 002C                      __psmallconst 1000  
                         __pcinit 137E                           __ramtop 1000                           __ptext0 1238  
                         __ptext1 13B4                           __ptext2 13E4                           __ptext3 1414  
                         __ptext4 148E                           __ptext5 1444                           __ptext6 1320  
                         __ptext7 1128                           __ptext8 1002                     relay_on@F2895 0033  
                  _gpio_pin_write 1128                           _lat_reg 000B                        ??_app_init 002F  
            end_of_initialization 13AA  gpio_pin_direction_init@pin_confg 0023                     __Lmediumconst 0000  
  dc_motor_move_left@dc_motor_obj 002B         dc_motor_stop@dc_motor_obj 002B                     _dc_motor_init 1444  
                   _dc_motor_stop 13B4            gpio_pin_init@pin_confg 002B                           postdec1 0FE5  
                         postdec2 0FDD                           postinc0 0FEE                           postinc2 0FDE  
          __end_of_gpio_pin_write 1238                  gpio_pin_init@ret 002D           gpio_pin_write@pin_confg 0023  
         gpio_pin_write@pin_state 0024                    ?_dc_motor_init 002E                    ?_dc_motor_stop 002B  
               relay_toggle@F2905 0031           _gpio_pin_direction_init 1002                     __pidataCOMRAM 146C  
                 ?_gpio_pin_write 0023               start_initialization 137E        __end_of_dc_motor_move_left 1444  
                     __pbssCOMRAM 0031                   ??_dc_motor_init 002F                   ??_dc_motor_stop 002C  
       ??_gpio_pin_direction_init 0024                       __smallconst 1000             __end_of_gpio_pin_init 137E  
 __end_of_gpio_pin_direction_init 1128                   relay_init@F2890 0034                         copy_data0 1392  
             _dc_motor_move_right 13E4                          __Hrparam 0000                          __Lrparam 0000  
                ??_gpio_pin_write 0025              ?_dc_motor_move_right 002B                          _app_init 148E  
                  relay_off@F2900 0032                          isa$xinst 0000                          _port_reg 0001  
                        _tris_reg 0015             ??_dc_motor_move_right 002C                _dc_motor_move_left 1414  
             ?_dc_motor_move_left 002B              ??_dc_motor_move_left 002C        gpio_pin_direction_init@ret 0029  
           __end_of_dc_motor_init 146C             __end_of_dc_motor_stop 13E4  
